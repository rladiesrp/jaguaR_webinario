library(adehabitatLT)
library(RMySQL)
library(arules)
library(ggplot2)
library(sp)
library(chron)
library(dplyr)
library(varhandle)
library(adehabitatHR)
library(leaflet)
library (lubridate)
library(outliers)
library (stats)
library(mapproj)
library(hms)
library(stringr)
library(geosphere)
library(randomcoloR)
library(ggrepel)
library(arulesViz)
library("widyr")
library("vcd")
library(shiny)
conn <- dbConnect(MySQL(), user="root", db="weka", host="localhost")
data1 <- dbSendQuery(conn, " SELECT distinct lat, lon FROM TB_RST_MovAnimal_Estado;")
df1<- fetch(data1,n = -1)
df1 <- as.data.frame(df1)
library('sf')
library('mapview')
polygons <- sf::read_sf("C:/Users/suela/Downloads/shape_taiama/shape_taiama2.shp")
points <- df1
points <- st_as_sf(points, coords = c("lon", "lat"))
st_crs(points) <- "+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0" # assign CRS to points
# Transform points data
pointsT <- st_transform(points, crs = st_crs(polygons))
# Intersection
overlayOutput <- st_intersects(pointsT, polygons)
overlayOutput
pnts <- points %>% mutate(
intersection = as.integer(st_intersects(pointsT, polygons)), area = if_else(is.na(intersection), '', as.character(polygons$DN)[intersection])
)
pnts
overlayOutput [40]
overlayOutput [15]
pnts [30]
pnts [20]
print(st_crs(pointsT))
pnts [16]
pnts [15]
png("cobertura.png")
# 2. Create a plot
plot(intersectedPolys)
png("cobertura.png")
# 2. Create a plot
plot(overlayOutput)
intersectedPolys <- polygons[unlist(overlayOutput), ]
png("cobertura.png")
# 2. Create a plot
plot(intersectedPolys)
